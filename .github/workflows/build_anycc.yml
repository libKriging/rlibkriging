name: R-CMD-INSTALL-build

on:
  push:
  pull_request:
  schedule:
    - cron: '0 2 * * SAT'

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        #R: [ 'release', 'next' ]
        cc: [ 'default', 'gcc-15' ]

    runs-on: 'ubuntu-latest'
    container:
      image: ubuntu:plucky
      
    steps:
      - name: install gcc-15
        if: ${{matrix.cc}} == 'gcc-15'
        run: |
          apt update && apt install -y software-properties-common
          add-apt-repository ppa:ubuntu-toolchain-r/test && apt update
          apt search gcc-15
          apt install -y gcc-15 g++-15
          update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-15 15 --slave /usr/bin/g++ g++ /usr/bin/g++-15
          update-alternatives --set gcc /usr/bin/gcc-15

      - name: install git
        run: apt install -y git

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: install R
        run: apt install -y r-base
        #uses: r-lib/actions/setup-r@v2
        #with:
        #  r-version: ${{ matrix.R }}
        #  rtools-version: ''

      - name: install R deps
        run: R -e "install.packages(c('Rcpp','RcppArmadillo','DiceKriging'))"
        #uses: r-lib/actions/setup-r-dependencies@v2

      - name: Setup cmake
        run: apt install -y cmake
        #uses: jwlawson/actions-setup-cmake@v1.13
        #with:
        #  cmake-version: '3.24.x'

      - run: |
          cd ..; R CMD INSTALL --build rlibkriging 
          mkdir rlibkriging/R-${{ matrix.R }}
          mv rlibkriging_*.* rlibkriging/R-${{ matrix.R }}/.
        shell: bash
        name: R CMD INSTALL

      - uses: actions/upload-artifact@v3
        with:
          path: ./R-*

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./R-*/*.tar.gz
            ./R-*/*.tgz
            ./R-*/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
